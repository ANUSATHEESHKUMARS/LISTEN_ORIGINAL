<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <link rel="stylesheet" href="/css/auth.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
    <div class="container">
        <div class="form-container">
            <h2>Create Account</h2>
            <% if (locals.error) { %>
                <div class="alert alert-danger"><%= error %></div>
            <% } %>
            <form id="signupForm" action="/user/signup" method="POST">
                <div class="form-group">
                    <div class="input-field">
                        <i class="fas fa-user"></i>
                        <input type="text" id="name" name="name" placeholder="Full Name">
                    </div>
                    <span class="error" id="nameError"></span>
                </div>

                <div class="form-group">
                    <div class="input-field">
                        <i class="fas fa-envelope"></i>
                        <input type="email" id="email" name="email" placeholder="Email">
                    </div>
                    <span class="error" id="emailError"></span>
                </div>

                <div class="form-group">
                    <div class="input-field">
                        <i class="fas fa-phone"></i>
                        <input type="tel" id="mobile" name="mobile" placeholder="Mobile Number">
                    </div>
                    <span class="error" id="mobileError"></span>
                </div>

                <div class="form-group">
                    <div class="input-field">
                        <i class="fas fa-lock"></i>
                        <input type="password" id="password" name="password" placeholder="Password">
                        <i class="fas fa-eye-slash toggle-password"></i>
                    </div>
                    <span class="error" id="passwordError"></span>
                </div>

                <div class="form-group">
                    <div class="input-field">
                        <i class="fas fa-lock"></i>
                        <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm Password">
                        <i class="fas fa-eye-slash toggle-password"></i>
                    </div>
                    <span class="error" id="confirmPasswordError"></span>
                </div>

                <button type="submit" class="submit-btn">Sign Up</button>
            </form>
            <div class="switch-form">
                Already have an account? <a href="/user/login">Login</a>
            </div>
        </div>
    </div>
    
    <!-- OTP Modal -->
    <div
      id="otpModal"
      class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden items-center justify-center"
    >
      <div class="bg-white p-8 rounded-lg shadow-xl w-96">
        <h3 class="text-xl font-semibold mb-4">Enter OTP</h3>
        <p class="text-sm text-gray-600 mb-4">
          Please enter the OTP sent to your email
        </p>

        <!-- OTP Error Message -->
        <p id="otpError" class="text-[#9B1C1C] text-xs mt-1 mb-3 hidden"></p>

        <div class="flex gap-2 mb-4">
          <input
            type="text"
            maxlength="1"
            class="otp-input w-12 h-12 text-center border-2 rounded-lg"
          />
          <input
            type="text"
            maxlength="1"
            class="otp-input w-12 h-12 text-center border-2 rounded-lg"
          />
          <input
            type="text"
            maxlength="1"
            class="otp-input w-12 h-12 text-center border-2 rounded-lg"
          />
          <input
            type="text"
            maxlength="1"
            class="otp-input w-12 h-12 text-center border-2 rounded-lg"
          />
          <input
            type="text"
            maxlength="1"
            class="otp-input w-12 h-12 text-center border-2 rounded-lg"
          />
          <input
            type="text"
            maxlength="1"
            class="otp-input w-12 h-12 text-center border-2 rounded-lg"
          />
        </div>

        <button
          id="verifyOtp"
          class="w-full py-3 bg-black text-white font-semibold rounded-lg hover:bg-gray-800"
        >
          Verify OTP
        </button>

        <div class="text-center mt-4">
          <button id="resendOtp" class="text-blue-600 hover:underline">
            Resend OTP
          </button>
          <div id="resendTimer" class="text-sm text-gray-600 mt-1 hidden"></div>
          <p id="resendMessage" class="text-[#9B1C1C] text-xs mt-1 hidden"></p>
        </div>

        <!-- OTP Verification Loading Spinner -->
        <div id="otp-loading-spinner" class="hidden fixed inset-0 bg-black/50 flex items-center justify-center z-50">
          <div class="bg-white p-5 rounded-lg flex flex-col items-center">
            <div class="w-10 h-10 border-4 border-gray-200 border-t-blue-500 rounded-full animate-spin mb-3"></div>
            <p class="text-gray-700">Verifying OTP...</p>
          </div>
        </div>
      </div>
    </div>

    <script src="/js/auth.js"></script>
    <script>document.addEventListener('DOMContentLoaded', function() {
        const signupForm = document.getElementById('signupForm');
        const otpModal = new bootstrap.Modal(document.getElementById('otpModal'));
        let timeLeft = 120; // 2 minutes
        let timerId = null;
    
        // Handle signup form submission
        signupForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            try {
                const formData = {
                    name: document.getElementById('name').value,
                    email: document.getElementById('email').value,
                    mobile: document.getElementById('mobile').value,
                    password: document.getElementById('password').value
                };
    
                const response = await fetch('/signup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(formData)
                });
    
                const data = await response.json();
    
                if (data.success) {
                    // Show OTP modal
                    otpModal.show();
                    startTimer();
                } else {
                    showError('errorMessage', data.message);
                }
            } catch (error) {
                showError('errorMessage', 'An error occurred. Please try again.');
            }
        });
    
        // Handle OTP input
        const otpInputs = document.querySelectorAll('.otp-input');
        otpInputs.forEach((input, index) => {
            input.addEventListener('keyup', (e) => {
                if (e.key >= 0 && e.key <= 9) {
                    if (index < otpInputs.length - 1) {
                        otpInputs[index + 1].focus();
                    }
                } else if (e.key === 'Backspace') {
                    if (index > 0) {
                        otpInputs[index - 1].focus();
                    }
                }
            });
        });
    
        // Handle OTP verification
        document.getElementById('verifyOtpBtn').addEventListener('click', async function() {
            const otp = Array.from(otpInputs).map(input => input.value).join('');
            
            try {
                const response = await fetch('/verify-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ otp })
                });
    
                const data = await response.json();
    
                if (data.success) {
                    window.location.href = '/login';
                } else {
                    showError('otpError', data.message);
                }
            } catch (error) {
                showError('otpError', 'An error occurred. Please try again.');
            }
        });
    
        // Handle resend OTP
        document.getElementById('resendOtp').addEventListener('click', async function() {
            try {
                const response = await fetch('/resend-otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
    
                const data = await response.json();
    
                if (data.success) {
                    this.disabled = true;
                    timeLeft = 120;
                    startTimer();
                    showSuccess('otpError', 'OTP resent successfully');
                } else {
                    showError('otpError', data.message);
                }
            } catch (error) {
                showError('otpError', 'Failed to resend OTP');
            }
        });
    
        // Timer functions
        function startTimer() {
            if (timerId) clearInterval(timerId);
            
            const timerDisplay = document.getElementById('timer');
            const resendBtn = document.getElementById('resendOtp');
            
            timerId = setInterval(() => {
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                
                timerDisplay.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                
                if (timeLeft === 0) {
                    clearInterval(timerId);
                    resendBtn.disabled = false;
                    return;
                }
                
                timeLeft--;
            }, 1000);
        }
    
        // Utility functions
        function showError(elementId, message) {
            const element = document.getElementById(elementId);
            element.textContent = message;
            element.classList.remove('d-none');
            element.classList.remove('alert-success');
            element.classList.add('alert-danger');
        }
    
        function showSuccess(elementId, message) {
            const element = document.getElementById(elementId);
            element.textContent = message;
            element.classList.remove('d-none');
            element.classList.remove('alert-danger');
            element.classList.add('alert-success');
        }
    });</script>
</html>

