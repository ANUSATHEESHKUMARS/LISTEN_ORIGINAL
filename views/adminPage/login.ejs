<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/admin.css">
    <style>
           /* Admin Panel Styles */
:root {
    --sidebar-width: 250px;
    --topbar-height: 60px;
    --primary-color: #4e73df;
    --secondary-color: #858796;
    --success-color: #1cc88a;
    --info-color: #36b9cc;
    --warning-color: #f6c23e;
    --danger-color: #e74a3b;
}

/* Login Page Styles */
.login-container {
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #f8f9fc;
}

.login-box {
    width: 100%;
    max-width: 400px;
    padding: 2rem;
    background: white;
    border-radius: 10px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
}

/* Dashboard Layout */
.admin-container {
    display: flex;
    min-height: 100vh;
}

.sidebar {
    width: var(--sidebar-width);
    background: #4e73df;
    color: white;
    position: fixed;
    height: 100vh;
    transition: all 0.3s ease;
}

.sidebar-header {
    padding: 1rem;
    text-align: center;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.sidebar .nav-link {
    color: rgba(255, 255, 255, 0.8);
    padding: 1rem;
    display: flex;
    align-items: center;
    gap: 10px;
}

.sidebar .nav-link:hover {
    color: white;
    background: rgba(255, 255, 255, 0.1);
}

.sidebar .nav-link.active {
    color: white;
    background: rgba(255, 255, 255, 0.2);
}

.main-content {
    flex: 1;
    margin-left: var(--sidebar-width);
    transition: all 0.3s ease;
}

.top-bar {
    height: var(--topbar-height);
    background: white;
    padding: 0 1rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.user-info {
    display: flex;
    align-items: center;
    gap: 10px;
}

.avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
}

.content-area {
    padding: 2rem;
    background: #f8f9fc;
    min-height: calc(100vh - var(--topbar-height));
}

/* Dashboard Stats */
.dashboard-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
    margin-bottom: 2rem;
}

.stat-card {
    background: white;
    padding: 1.5rem;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    gap: 1rem;
}

.stat-icon {
    width: 50px;
    height: 50px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    color: white;
}

.stat-details h3 {
    font-size: 0.9rem;
    color: var(--secondary-color);
    margin: 0;
}

.stat-number {
    font-size: 1.5rem;
    font-weight: bold;
    margin: 0;
    color: #333;
}

/* Table Styles */
.table {
    background: white;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.table th {
    background: #f8f9fc;
    border-bottom: 2px solid #e3e6f0;
}

/* Responsive Design */
@media (max-width: 768px) {
    .sidebar {
        transform: translateX(-100%);
    }

    .sidebar.active {
        transform: translateX(0);
    }

    .main-content {
        margin-left: 0;
    }

    .dashboard-stats {
        grid-template-columns: 1fr;
    }
}

    </style>
</head>
<body>
    <div class="container">
        <div class="login-container">
            <div class="login-box">
                <h2 class="text-center mb-4">Admin Login</h2>
                <div id="errorMessage" class="alert alert-danger d-none"></div>
                <form id="adminLoginForm">
                    <div class="mb-3">
                        <input type="email" class="form-control" id="email" placeholder="Email" required>
                    </div>
                    <div class="mb-3">
                        <input type="password" class="form-control" id="password" placeholder="Password" required>
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Login</button>
                </form>
            </div>
        </div>
    </div>
    <script src="/js/admin/login.js"></script>
    <script>document.addEventListener('DOMContentLoaded', function() {
        const loginForm = document.getElementById('adminLoginForm');
        const errorMessage = document.getElementById('errorMessage');
    
        loginForm.addEventListener('submit', async function(e) {
            e.preventDefault();
    
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
    
            // Validate email
            if (!isValidEmail(email)) {
                showError('Please enter a valid email address');
                return;
            }
    
            // Validate password
            if (!isValidPassword(password)) {
                showError('Password must be at least 6 characters long');
                return;
            }
    
            try {
                const response = await fetch('/admin/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });
    
                const data = await response.json();
    
                if (data.success) {
                    window.location.href = '/admin/dashboard';
                } else {
                    showError(data.message || 'Invalid credentials');
                }
            } catch (error) {
                showError('An error occurred. Please try again.');
            }
        });
    
        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }
    
        function isValidPassword(password) {
            return password.length >= 6;
        }
    
        function showError(message) {
            errorMessage.textContent = message;
            errorMessage.classList.remove('d-none');
            setTimeout(() => {
                errorMessage.classList.add('d-none');
            }, 3000);
        }
    });</script>
</body>
</html>