<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Login</title>
    <link rel="stylesheet" href="/user/tailwindcss/output.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
</head>
<body class="bg-black min-h-screen flex flex-col items-center justify-center p-4">
    <!-- Toast Notification -->
    <div id="toast" class="fixed top-4 right-4 z-50 transform transition-all duration-300 translate-x-full opacity-0">
        <div class="flex items-center p-4 text-white rounded-lg shadow-lg min-w-[300px]">
            <i id="toastIcon" class="fas mr-3"></i>
            <p id="toastMessage" class="font-medium"></p>
        </div>
    </div>

    <!-- Login Container -->
    <div class="w-full max-w-md">
        <!-- Logo Section -->
        <div class="mb-8 text-center">
            <img src="/images/logo.png" alt="Logo" class="h-20 mx-auto mb-4" />
            <h1 class="text-3xl font-bold text-white mb-2">Welcome Back</h1>
            <p class="text-zinc-500">Please sign in to continue</p>
        </div>

        <div class="bg-zinc-900 rounded-3xl shadow-2xl border border-zinc-800 p-8">
            <form id="adminLoginForm" action="/admin/login" method="POST" class="space-y-6" novalidate>
                <!-- Email Input -->
                <div class="space-y-2">
                    <label for="email" class="block text-sm font-medium text-zinc-400">Email Address</label>
                    <div class="relative group">
                        <input
                            type="email"
                            id="email"
                            name="email"
                            class="w-full px-5 py-4 bg-zinc-800/50 text-white rounded-xl border border-zinc-700 focus:outline-none focus:ring-2 focus:ring-zinc-600 focus:border-transparent transition-all duration-200 placeholder-zinc-500"
                            placeholder="Enter your email"
                            required
                        />
                        <div class="absolute inset-y-0 right-0 flex items-center pr-4 pointer-events-none text-zinc-500">
                            <i class="fas fa-envelope"></i>
                        </div>
                        <span class="validation-message absolute -bottom-6 left-0 text-sm text-red-400 opacity-0 transition-opacity duration-200"></span>
                    </div>
                </div>

                <!-- Password Input -->
                <div class="space-y-2">
                    <label for="password" class="block text-sm font-medium text-zinc-400">Password</label>
                    <div class="relative group">
                        <input
                            type="password"
                            id="password"
                            name="password"
                            class="w-full px-5 py-4 bg-zinc-800/50 text-white rounded-xl border border-zinc-700 focus:outline-none focus:ring-2 focus:ring-zinc-600 focus:border-transparent transition-all duration-200 placeholder-zinc-500"
                            placeholder="Enter your password"
                            required
                        />
                        <button 
                            type="button"
                            id="togglePassword"
                            class="absolute inset-y-0 right-0 flex items-center pr-4 text-zinc-500 hover:text-zinc-400 transition-colors duration-200"
                        >
                            <i class="far fa-eye"></i>
                        </button>
                        <span class="validation-message absolute -bottom-6 left-0 text-sm text-red-400 opacity-0 transition-opacity duration-200"></span>
                    </div>
                </div>

                <!-- Submit Button -->
                <button
                    type="submit"
                    class="w-full py-4 px-6 bg-zinc-800 hover:bg-zinc-700 text-white font-medium rounded-xl transition duration-200 focus:outline-none focus:ring-2 focus:ring-zinc-600 focus:ring-offset-2 focus:ring-offset-black relative mt-8 border border-zinc-700"
                >
                    <span class="inline-flex items-center">
                        <span id="buttonText">Sign In to Dashboard</span>
                        <span id="loadingSpinner" class="hidden ml-2">
                            <i class="fas fa-circle-notch fa-spin"></i>
                        </span>
                    </span>
                </button>
            </form>
        </div>
    </div>


    <!-- Footer -->
    <footer class="mt-8 text-sm text-gray-400">
      Â© 2024 Listen. All Rights Reserved.
    </footer>

    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('adminLoginForm');
        const emailInput = document.getElementById('email');
        const passwordInput = document.getElementById('password');
        const togglePassword = document.getElementById('togglePassword');
        const buttonText = document.getElementById('buttonText');
        const loadingSpinner = document.getElementById('loadingSpinner');
        const toast = document.getElementById('toast');
        let isSubmitting = false;

        function showToast(message, type) {
          const toast = document.getElementById('toast');
          const toastMessage = document.getElementById('toastMessage');
          const toastIcon = document.getElementById('toastIcon');

          // Set message and styling based on type
          toastMessage.textContent = message;
          if (type === 'error') {
            toast.firstElementChild.classList.add('bg-red-500');
            toast.firstElementChild.classList.remove('bg-green-500');
            toastIcon.classList.add('fa-circle-xmark');
            toastIcon.classList.remove('fa-circle-check');
          } else {
            toast.firstElementChild.classList.add('bg-green-500');
            toast.firstElementChild.classList.remove('bg-red-500');
            toastIcon.classList.add('fa-circle-check');
            toastIcon.classList.remove('fa-circle-xmark');
          }

          // Show toast
          toast.classList.remove('translate-x-full', 'opacity-0');
          
          // Hide toast after 3 seconds
          setTimeout(() => {
            toast.classList.add('translate-x-full', 'opacity-0');
          }, 3000);
        }

        function showValidationMessage(input, message) {
          const messageElement = input.parentElement.querySelector('.validation-message');
          messageElement.textContent = message;
          messageElement.style.opacity = '1';
          input.classList.add('border-red-500');
        }

        function hideValidationMessage(input) {
          const messageElement = input.parentElement.querySelector('.validation-message');
          messageElement.style.opacity = '0';
          input.classList.remove('border-red-500');
        }

        // Toggle password visibility
        togglePassword.addEventListener('click', function() {
          const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
          passwordInput.setAttribute('type', type);
          
          const icon = this.querySelector('i');
          icon.classList.toggle('fa-eye');
          icon.classList.toggle('fa-eye-slash');
        });

        // Real-time validation
        emailInput.addEventListener('input', function() {
          hideValidationMessage(this);
        });

        passwordInput.addEventListener('input', function() {
          hideValidationMessage(this);
        });

        // Form submission
        form.addEventListener('submit', async function(e) {
          e.preventDefault();
          if (isSubmitting) return;

          // Reset validation messages
          hideValidationMessage(emailInput);
          hideValidationMessage(passwordInput);

          // Validate email
          const email = emailInput.value.trim();
          if (!email) {
            showValidationMessage(emailInput, 'Email is required');
            return;
          }
          if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)) {
            showValidationMessage(emailInput, 'Please enter a valid email');
            return;
          }

          // Validate password
          if (!passwordInput.value) {
            showValidationMessage(passwordInput, 'Password is required');
            return;
          }

          try {
            isSubmitting = true;
            buttonText.textContent = 'Signing in...';
            loadingSpinner.classList.remove('hidden');

            const response = await fetch('/admin/login', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                email: email,
                password: passwordInput.value
              })
            });

            const data = await response.json();

            if (data.success) {
              showToast('Login successful!', 'success');
              window.location.href = '/admin/dashboard';
            } else {
              showToast(data.message || 'Invalid credentials', 'error');
            }
          } catch (error) {
            showToast('An error occurred. Please try again.', 'error');
          } finally {
            isSubmitting = false;
            buttonText.textContent = 'Sign In';
            loadingSpinner.classList.add('hidden');
          }
        });
      });
    </script>
  </body>
</html>
